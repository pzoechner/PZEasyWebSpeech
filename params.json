{"name":"Pzeasywebspeech.js","tagline":"easily add speech support to your website","body":"This JS-file makes it really easy to add speech support to your website. As a workaround for Chrome Browser, the speech is stopped after every full stop. To enhance the quality of speech, several (mostly closing) HTML-Tags are converted to full stops - feel free to add your own by modifying the \"text\" variable.\r\n\r\n## Example\r\nAn example of what the library does (V1.0.0) can be found [here](http://fh.zoechner.com/branson/career/overview/).\r\n\r\n## Usage\r\nThe included [index.html](https://github.com/pzoechner/PZEasyWebSpeech/blob/master/index.html) shows an implementation of the library.\r\n\r\n### 1) Start/Stop Button\r\nAdd a custom class (here `toggle-speak-stop`) to the start/stop button element, defined as the first argument of the initialization.\r\n\r\n### 2) Text to Read\r\nTo define what text should be read, add the `text-to-read` class to your paragraph or div. All HTML-Tags will be stripped from the string, so only the contained text will be read.\r\n\r\n### 3) Initialization\r\nAdd this at the end of your HTML.\r\n```javascript\r\nPZEasyWebSpeech(\r\n  \"toggle-speak-stop\", // the id of the start/stop element\r\n  \"text-to-read\",      // the class name of which elements should be read\r\n  \"fa-volume-up\",      // class added to start/stop element when starting speech\r\n  \"fa-volume-off\",     // class added to start/stop element when ending speech \r\n  \"hidden\",            // class added to start/stop in case browser does not support speech and start/stop should be hidden\r\n  \"en-GB\",             // language eg.: \"en-GB\", \"en-US\", \"de-DE\", etc\r\n  1                    // volume, 0 to 1\r\n);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}